MILKDROP_PRESET_VERSION=201
PSVERSION=2
PSVERSION_WARP=2
PSVERSION_COMP=2
[preset00]
fRating=1.000
fGammaAdj=1.980
fDecay=0.500
fVideoEchoZoom=1.000
fVideoEchoAlpha=0.500
nVideoEchoOrientation=3
nWaveMode=0
bAdditiveWaves=1
bWaveDots=0
bWaveThick=1
bModWaveAlphaByVolume=1
bMaximizeWaveColor=1
bTexWrap=1
bDarkenCenter=0
bRedBlueStereo=0
bBrighten=0
bDarken=1
bSolarize=0
bInvert=0
fWaveAlpha=0.005
fWaveScale=0.118
fWaveSmoothing=0.900
fWaveParam=-0.480
fModWaveAlphaStart=0.400
fModWaveAlphaEnd=1.600
fWarpAnimSpeed=1.459
fWarpScale=2.007
fZoomExponent=1.00000
fShader=0.000
zoom=0.99990
rot=-0.00000
cx=0.500
cy=0.500
dx=0.00000
dy=0.00000
warp=0.01000
sx=0.99990
sy=1.00000
wave_r=0.800
wave_g=0.490
wave_b=1.000
wave_x=0.500
wave_y=0.500
ob_size=0.035
ob_r=0.000
ob_g=0.000
ob_b=0.000
ob_a=1.000
ib_size=0.260
ib_r=0.250
ib_g=0.250
ib_b=0.250
ib_a=0.000
nMotionVectorsX=64.000
nMotionVectorsY=48.000
mv_dx=0.000
mv_dy=0.000
mv_l=1.850
mv_r=0.500
mv_g=0.500
mv_b=0.500
mv_a=0.000
b1n=0.000
b2n=0.000
b3n=0.000
b1x=1.000
b2x=1.000
b3x=1.000
b1ed=0.000
wavecode_0_enabled=0
wavecode_0_samples=119
wavecode_0_sep=38
wavecode_0_bSpectrum=1
wavecode_0_bUseDots=0
wavecode_0_bDrawThick=0
wavecode_0_bAdditive=0
wavecode_0_scaling=2.15542
wavecode_0_smoothing=0.10000
wavecode_0_r=1.000
wavecode_0_g=0.000
wavecode_0_b=0.000
wavecode_0_a=0.500
wave_0_per_frame1=t1 = 0;
wave_0_per_frame2=t2 = 1;
wave_0_per_frame3=
wave_0_per_frame4=t3=t4=t5 = 0;
wave_0_per_point1=n = t1 * 8 + reg06;
wave_0_per_point2=
wave_0_per_point3=BPM = reg00*t2;
wave_0_per_point4=
wave_0_per_point5=x = BPM/reg01;
wave_0_per_point6=
wave_0_per_point7=y0 = gmegabuf(n)/8; 
wave_0_per_point8=y = 0.3 + y0;
wave_0_per_point9=
wave_0_per_point10=
wave_0_per_point11=amp = pow(value1+value2,2);
wave_0_per_point12=t5 += amp * (sample>0.5);
wave_0_per_point13=t4 += amp * (sample<0.5)*(sample>0.25);
wave_0_per_point14=t3 += amp * (sample < 0.25);
wave_0_per_point15=
wave_0_per_point16=reg50 = sqrt(t3);
wave_0_per_point17=reg51 = sqrt(t4);
wave_0_per_point18=reg52 = sqrt(t5);
wave_0_per_point19=
wave_0_per_point20=t1 += 1;
wave_0_per_point21=t2 *= reg05;
wavecode_1_enabled=0
wavecode_1_samples=119
wavecode_1_sep=0
wavecode_1_bSpectrum=0
wavecode_1_bUseDots=0
wavecode_1_bDrawThick=0
wavecode_1_bAdditive=0
wavecode_1_scaling=0.89152
wavecode_1_smoothing=0.82000
wavecode_1_r=1.000
wavecode_1_g=1.000
wavecode_1_b=0.000
wavecode_1_a=1.000
wave_1_per_frame1=t1 = 0;
wave_1_per_frame2=t2 = 1;
wave_1_per_point1=n = (t1 + reg03) * 8 +reg06;
wave_1_per_point2=
wave_1_per_point3=BPM = reg00*t2;
wave_1_per_point4=
wave_1_per_point5=x = BPM/reg01;
wave_1_per_point6=
wave_1_per_point7=y0 = gmegabuf(n)/8; 
wave_1_per_point8=y = 0.3 + y0;
wave_1_per_point9=
wave_1_per_point10=
wave_1_per_point11=t1 += 1;
wave_1_per_point12=t2 *= reg05;
wavecode_2_enabled=0
wavecode_2_samples=119
wavecode_2_sep=0
wavecode_2_bSpectrum=0
wavecode_2_bUseDots=0
wavecode_2_bDrawThick=0
wavecode_2_bAdditive=0
wavecode_2_scaling=5.34537
wavecode_2_smoothing=0.82000
wavecode_2_r=0.000
wavecode_2_g=0.600
wavecode_2_b=1.000
wavecode_2_a=1.000
wave_2_per_frame1=t1 = 0;
wave_2_per_frame2=t2 = 1;
wave_2_per_point1=n = (t1 + 2*reg03) * 8 +reg06;
wave_2_per_point2=
wave_2_per_point3=BPM = reg00*t2;
wave_2_per_point4=
wave_2_per_point5=x = BPM/reg01;
wave_2_per_point6=
wave_2_per_point7=y0 = gmegabuf(n)/8; 
wave_2_per_point8=y = 0.3 + y0;
wave_2_per_point9=
wave_2_per_point10=
wave_2_per_point11=t1 += 1;
wave_2_per_point12=t2 *= reg05;
wavecode_3_enabled=0
wavecode_3_samples=30
wavecode_3_sep=0
wavecode_3_bSpectrum=1
wavecode_3_bUseDots=0
wavecode_3_bDrawThick=1
wavecode_3_bAdditive=0
wavecode_3_scaling=1.00000
wavecode_3_smoothing=0.50000
wavecode_3_r=1.000
wavecode_3_g=1.000
wavecode_3_b=1.000
wavecode_3_a=0.300
wave_3_per_frame1=t1 = 0;
wave_3_per_frame2=t2 = 1;
wave_3_per_point1=n = t1*8+50000;
wave_3_per_point2=
wave_3_per_point3=BPM = reg00*t2*4;
wave_3_per_point4=
wave_3_per_point5=x = BPM/reg01;
wave_3_per_point6=
wave_3_per_point7=y0 = gmegabuf(n)/8; 
wave_3_per_point8=y = 0.3 + y0*2;
wave_3_per_point9=
wave_3_per_point10=
wave_3_per_point11=t1 += 1;
wave_3_per_point12=t2 *= reg05;
wave_3_per_point13=
shapecode_0_enabled=0
shapecode_0_sides=14
shapecode_0_additive=0
shapecode_0_thickOutline=0
shapecode_0_textured=0
shapecode_0_num_inst=5
shapecode_0_x=0.500
shapecode_0_y=0.500
shapecode_0_rad=0.07287
shapecode_0_ang=0.00000
shapecode_0_tex_ang=1.00531
shapecode_0_tex_zoom=1.53117
shapecode_0_r=1.000
shapecode_0_g=1.000
shapecode_0_b=1.000
shapecode_0_a=0.400
shapecode_0_r2=0.000
shapecode_0_g2=0.000
shapecode_0_b2=0.000
shapecode_0_a2=0.000
shapecode_0_border_r=1.000
shapecode_0_border_g=1.000
shapecode_0_border_b=1.000
shapecode_0_border_a=0.000
shape_0_per_frame1=amp = 1;
shape_0_per_frame2=
shape_0_per_frame3=n = instance*4+50;
shape_0_per_frame4=
shape_0_per_frame5=re = gmegabuf (n+1);
shape_0_per_frame6=im = gmegabuf (n);
shape_0_per_frame7=bet = sqrt (re*re + im*im) * (instance*0+5)/3;
shape_0_per_frame8=bet = 1;
shape_0_per_frame9=x = 0.5 + re/bet/16;
shape_0_per_frame10=y = 0.5 + im/bet*q32/16;
shape_0_per_frame11=
shape_0_per_frame12=
shape_0_per_frame13=
shape_0_per_frame14=rad = gmegabuf(n+2)*0.01;
shape_0_per_frame15=
shape_0_per_frame16=k1 = instance/num_inst;
shape_0_per_frame17=r = 1-k1;
shape_0_per_frame18=b = k1;
shape_0_per_frame19=g = k1*(1-k1)*4;
shape_0_per_frame20=a = 1;
shape_0_per_frame21=
shape_0_per_frame22=if (instance==4, x=0.5; y = 0.5; a= 0;border_a = 1; rad = 0.02,0);
shapecode_1_enabled=0
shapecode_1_sides=4
shapecode_1_additive=1
shapecode_1_thickOutline=1
shapecode_1_textured=0
shapecode_1_num_inst=2
shapecode_1_x=0.800
shapecode_1_y=0.800
shapecode_1_rad=0.08837
shapecode_1_ang=0.00000
shapecode_1_tex_ang=0.00000
shapecode_1_tex_zoom=0.93550
shapecode_1_r=1.000
shapecode_1_g=1.000
shapecode_1_b=1.000
shapecode_1_a=1.000
shapecode_1_r2=0.000
shapecode_1_g2=0.000
shapecode_1_b2=0.400
shapecode_1_a2=0.000
shapecode_1_border_r=0.000
shapecode_1_border_g=1.000
shapecode_1_border_b=0.000
shapecode_1_border_a=0.000
shape_1_per_frame1=
shape_1_per_frame2=if (instance ==0,
shape_1_per_frame3=  a = max(0,min(1,q1*22)); a2 = a;
shape_1_per_frame4=
shape_1_per_frame5=  x = 0.6+ 0.04*(q2%4);
shape_1_per_frame6=  y = 0.7;
shape_1_per_frame7=
shape_1_per_frame8=,0);
shape_1_per_frame9=
shape_1_per_frame10=if (instance ==1,
shape_1_per_frame11=  a = max(0,min(1,q3*22))/3; a2 = a;
shape_1_per_frame12=  x = 0.6;
shape_1_per_frame13=  y = 0.5;
shape_1_per_frame14=
shape_1_per_frame15=,0);
shapecode_2_enabled=0
shapecode_2_sides=14
shapecode_2_additive=1
shapecode_2_thickOutline=1
shapecode_2_textured=0
shapecode_2_num_inst=1
shapecode_2_x=0.650
shapecode_2_y=0.100
shapecode_2_rad=0.06386
shapecode_2_ang=0.00000
shapecode_2_tex_ang=0.00000
shapecode_2_tex_zoom=0.73678
shapecode_2_r=0.000
shapecode_2_g=0.600
shapecode_2_b=1.000
shapecode_2_a=1.000
shapecode_2_r2=0.000
shapecode_2_g2=0.700
shapecode_2_b2=1.000
shapecode_2_a2=0.000
shapecode_2_border_r=1.000
shapecode_2_border_g=1.000
shapecode_2_border_b=0.000
shapecode_2_border_a=0.200
shape_2_per_frame1=
shape_2_per_frame2=n = instance*4+100;
shape_2_per_frame3=
shape_2_per_frame4=re = gmegabuf (n+1);
shape_2_per_frame5=im = gmegabuf (n);
shape_2_per_frame6=bet = sqrt (re*re + im*im) * (instance*0+5)/3;
shape_2_per_frame7=bet = 1;
shape_2_per_frame8=x = 0.5 + re/bet/16;
shape_2_per_frame9=y = 0.5 + im/bet*q32/16;
shape_2_per_frame10=
shape_2_per_frame11=a = 1;
shape_2_per_frame12=
shape_2_per_frame13=rad = 0.04;
shape_2_per_frame14=
shapecode_3_enabled=1
shapecode_3_sides=4
shapecode_3_additive=0
shapecode_3_thickOutline=1
shapecode_3_textured=0
shapecode_3_num_inst=2
shapecode_3_x=0.600
shapecode_3_y=0.650
shapecode_3_rad=0.04914
shapecode_3_ang=0.00000
shapecode_3_tex_ang=0.00000
shapecode_3_tex_zoom=0.34933
shapecode_3_r=1.000
shapecode_3_g=1.000
shapecode_3_b=0.000
shapecode_3_a=1.000
shapecode_3_r2=0.000
shapecode_3_g2=0.000
shapecode_3_b2=0.000
shapecode_3_a2=0.000
shapecode_3_border_r=0.200
shapecode_3_border_g=0.700
shapecode_3_border_b=0.500
shapecode_3_border_a=0.000
shape_3_per_frame1=x = 0.8;
shape_3_per_frame2=
shape_3_per_frame3=if (instance==0, y= 0.3 + q28*0.006; r = 0, y = 0.7 + q29*0.03; r = 1);
per_frame_init_1=index = 0;
per_frame_init_2=loop (200000,
per_frame_init_3=  megabuf(index) = 0;
per_frame_init_4=  gmegabuf(index) = 0;
per_frame_init_5=  index = index + 1;
per_frame_init_6=);
per_frame_init_7=
per_frame_init_8=tstart = time;
per_frame_init_9=
per_frame_init_10=bd_recsz   = 8;
per_frame_init_11=bd_oct     = 4; //Oktaven
per_frame_init_12=bd_spo     = 30;//Res. pro Oktave
per_frame_init_13=bd_finc    = pow(2.0,1/bd_spo); //Freq. Incr. 
per_frame_init_14=bd_nres    = bd_oct * bd_spo;
per_frame_init_15=bd_minbpm  = 20;
per_frame_init_16=bd_maxbpm  = pow(2,bd_oct)*bd_minbpm;
per_frame_init_17=
per_frame_init_18=//mem spaces
per_frame_init_19=bd_dat0    = 100000;
per_frame_init_20=bd_tab0     = bd_dat0 + bd_nres * bd_recsz * 3;
per_frame_init_21=
per_frame_init_22=
per_frame_init_23=//Fill BPM Tab
per_frame_init_24=//n = bd_dat0;
per_frame_init_25=//BPM = bd_minbpm;
per_frame_init_26=//loop (bd_nres,gmegabuf (n) = BPM; BPM *=  bd_finc; n += bd_recsz;);
per_frame_init_27=
per_frame_init_28=
per_frame_init_29=//##### nur fuer Darstellung
per_frame_init_30=reg00 = bd_minbpm;
per_frame_init_31=reg01 = bd_maxbpm;
per_frame_init_32=reg02 = bd_recsz;
per_frame_init_33=reg03 = bd_nres;
per_frame_init_34=reg05 = bd_finc;
per_frame_init_35=
per_frame_init_36=reg06 = bd_dat0;
per_frame_init_37=reg07 = bd_mp0;
per_frame_init_38=
per_frame_1=//############## THIS IS A CONSTRUCTION SITE #########
per_frame_2=
per_frame_3=dt = min (1/fps,0.1) ; //Stability !
per_frame_4=dec_m = 1-dt*4; dec_s = 1 - dt; dec_xs = 1-dt/6;
per_frame_5=t0 = time - tstart;
per_frame_6=
per_frame_7=bd_b =  bass; bd_bass_ = bd_bass_*dec_m + (1-dec_m)*bd_b; bd_bass = bd_b-bd_bass_;
per_frame_8=bd_m =  mid ; bd_mid_  = bd_mid_ *dec_m + (1-dec_m)*bd_m; bd_mid =  bd_m -bd_mid_;
per_frame_9=bd_t =  treb; bd_treb_ = bd_treb_*dec_m + (1-dec_m)*bd_t; bd_treb = bd_t-bd_treb_;
per_frame_10=
per_frame_11=n = 0; BPM = bd_minbpm; 
per_frame_12=loop (bd_nres, 
per_frame_13=  gmegabuf(50000+n*bd_recsz) = 0; 
per_frame_14=  bd_arg = BPM/60*t0*6.283; 
per_frame_15=  gmegabuf (bd_tab0+n*bd_recsz) = BPM; 
per_frame_16=  BPM *= bd_finc;
per_frame_17=n+=1);
per_frame_18=
per_frame_19=bd_src=0;
per_frame_20=loop (3, bd_exc = bd_bass*(bd_src==0) + bd_mid*(bd_src==1) + bd_treb*(bd_src==2);
per_frame_21=  oct = 0;
per_frame_22=  loop (bd_oct,
per_frame_23=    bd_slot = 0;
per_frame_24=    bd_pk = 0; bd_mean = 0.0;
per_frame_25=    loop (bd_spo,
per_frame_26=      bd_tabptr = bd_tab0 +                 (oct*bd_spo+ bd_slot)*bd_recsz;
per_frame_27=      n        =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz;
per_frame_28=      BPM = gmegabuf(bd_tabptr); bd_omega = BPM/60*6.283;
per_frame_29=      Feder = sqr(bd_omega); //Res.f = sqrt (Feder)/2pi (Hz)
per_frame_30=      gmegabuf (n+4) = gmegabuf(n+2); //alte pos
per_frame_31=      gmegabuf (n+1) *= 1-.5*dt * sqrt (BPM/300); //damping
per_frame_32=
per_frame_33=      EC_Steps = int (1 + BPM/50)*2;
per_frame_34=      loop (EC_Steps, // Euler-Cauchy steps
per_frame_35=        Kraft = bd_exc - Feder*gmegabuf(n + 2) ;
per_frame_36=        gmegabuf (n+1) += Kraft         * dt/EC_Steps;
per_frame_37=        gmegabuf (n+2) += gmegabuf(n+1) * dt/EC_Steps;  
per_frame_38=      );
per_frame_39=      beatcos = gmegabuf(n+1);  beatsin = gmegabuf(n+2)*bd_omega;
per_frame_40=      quad = sqrt (pow(beatsin,2) + pow(beatcos,2));
per_frame_41=      gmegabuf (n) = gmegabuf(n)*0.8 + 0.2*quad;
per_frame_42=      bd_ampl = gmegabuf(n);
per_frame_43=      bd_mean += bd_ampl;
per_frame_44=      if (bd_ampl > bd_pk, bd_pk=bd_ampl, 0);
per_frame_45=    bd_slot +=1;);
per_frame_46= // Komb. bass,mid,treb
per_frame_47=    bd_slot = 0;    
per_frame_48=    bd_qual = pow(bd_pk/bd_mean*bd_spo-1,1);
per_frame_49=    gmegabuf((bd_src*bd_oct+oct)*2) = bd_qual;
per_frame_50=    loop (bd_spo,
per_frame_51=      m =  50000 + (bd_slot + 0*oct*bd_spo)*bd_recsz;
per_frame_52=      n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ bd_slot)*bd_recsz; //#2x berechnet
per_frame_53=      gmegabuf(m) += (bd_qual)*gmegabuf (n)/12;
per_frame_54=    bd_slot +=1;);
per_frame_55=  oct += 1;);
per_frame_56=bd_src +=1;);
per_frame_57=
per_frame_58=
per_frame_59=//Get maxind
per_frame_60=bd_slot = 0; maxind = 0; bd_pk = 0; bd_mean = 0;
per_frame_61=loop (bd_spo,
per_frame_62=   m =  50000 + bd_slot*bd_recsz;
per_frame_63=   gmegabuf(m) = pow(gmegabuf(m),1);
per_frame_64=   bd_mean += gmegabuf(m);
per_frame_65=   if (gmegabuf(m) > bd_pk, bd_pk = gmegabuf(m); maxind = bd_slot, 0);
per_frame_66=bd_slot += 1);
per_frame_67=quali = bd_pk/bd_mean*bd_spo-1;
per_frame_68=
per_frame_69=n = 0; loop (150, gmegabuf(50+n) *= 0; n+=1);
per_frame_70=
per_frame_71=//KREISE
per_frame_72=bd_src = 0; tsin = 0; tcos = 0;
per_frame_73=loop (3,
per_frame_74=  oct = 0;  
per_frame_75=  loop (bd_oct,
per_frame_76=    n         =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;
per_frame_77=    bd_tabptr = bd_tab0  +                 (oct*bd_spo+ maxind)*bd_recsz;
per_frame_78=    BPM = gmegabuf(bd_tabptr); 
per_frame_79=
per_frame_80=    im =  gmegabuf(n+1);
per_frame_81=    re =  gmegabuf(n+2) * BPM/60*6.283;
per_frame_82=    bd_cos =  cos (BPM/60*6.28*time);
per_frame_83=    bd_sin = -sin (BPM/60*6.28*time);
per_frame_84=
per_frame_85=//Winkel zurueckdrehen. Das sind nun die Winkel relativ zu cos(oct*time).
per_frame_86=    re0 =  re*bd_cos + im*bd_sin;
per_frame_87=    im0 = -re*bd_sin + im*bd_cos;
per_frame_88=    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);
per_frame_89=    gmegabuf (50+oct*4)   +=  bd_qual * (im0)*1;
per_frame_90=    gmegabuf (50+oct*4+1) +=  bd_qual * (re0)*1;
per_frame_91=    gmegabuf (50+oct*4+2) +=  bd_qual;
per_frame_92=
per_frame_93=//Summe der besten Beitraege. Das ist der Referenzwinkel.
per_frame_94=    gmegabuf (100+0)  +=  bd_qual * im0;
per_frame_95=    gmegabuf (100+1)  +=  bd_qual * re0;
per_frame_96=
per_frame_97=//Nun sollten wir die Differenzwinkel zur Ref berechnen. Und was damit ? Dann kann ich die
per_frame_98=//Einzelwinkel auf Ref bringen - bringt doch nichts !
per_frame_99=//Ich kann alle auf Null drehen, daraus sinusse erzeuge und addieren ->besserer Takt ?
per_frame_100=    re =  (bd_cos*re0 + bd_sin*im0);
per_frame_101=    im =  (-bd_cos*im0 + bd_sin*re0);
per_frame_102=tsin += im*5;
per_frame_103=
per_frame_104=  oct += 1);
per_frame_105=bd_src +=1);
per_frame_106=q28 = tsin;
per_frame_107=
per_frame_108=vol = bass_att + mid_att + treb_att;
per_frame_109=vol_ = vol_*0.95 + 0.05*vol;
per_frame_110=q29 = vol-vol_;
per_frame_111=
per_frame_112=//Welche Oktave ???
per_frame_113=bd_src = 0; maxo = 0; maxs = 0; maxa = 0;
per_frame_114=loop (3,
per_frame_115=  oct = 1;  
per_frame_116=  loop (bd_oct-1,
per_frame_117=    n =  bd_dat0 + (bd_nres*bd_src +oct*bd_spo+ maxind)*bd_recsz;
per_frame_118=    bd_qual = gmegabuf((bd_src*bd_oct+oct)*2);
per_frame_119=
per_frame_120=    ampl = bd_qual / (1+oct*(maxind/bd_oct)*0);
per_frame_121=    if (ampl>maxa, maxa = ampl; maxs = bd_src; maxo = oct;, 0);
per_frame_122=  oct += 1);
per_frame_123=bd_src +=1);
per_frame_124=
per_frame_125=//Beat-Flash
per_frame_126=testi = bd_nres*maxs +bd_spo*maxo + maxind;
per_frame_127=if (bor (beat && (prog==0), abs(testi-test0)<2),test0 = testi,0);
per_frame_128=n =  bd_dat0 + (test0)*bd_recsz;
per_frame_129=creep = gmegabuf(n+1);
per_frame_130=beat =  (creep>0) * (creepo <0);
per_frame_131=beatct = if (change, 0, beatct+beat);
per_frame_132=prog = (prog+beat)%8;
per_frame_133=creepo = creep;
per_frame_134=show = if (beat, 1, show*0.5);
per_frame_135=q1 = (gmegabuf(n+1)/gmegabuf(n));
per_frame_136=q2 = prog;
per_frame_137=
per_frame_138=
per_frame_139=
per_frame_140=//Selbst bei Barbie Girl fehlt manchmal der Rhythmus in Band 2,
per_frame_141=//obwohl das der gefuehlte Takt ist - >Problem mit Phasenkorrektur !
per_frame_142=//stehen Phasen bei doppelter Frequenz in Relation ? NEIN.
per_frame_143=
per_frame_144=
per_frame_145=
per_frame_146=
per_frame_147=
per_frame_148=//Problem: Fats Domino (1992) hat 55BPM -> Problem mit 110
per_frame_149=//Problem: 1991 London Beat I been thinking about you - geht nicht - solved
per_frame_150=//Problem: U96 - Love religion (1995) beginnt mit BPM < 20
per_frame_151=//Porblem: adiemus (1995)
per_frame_152=//Konflikt-Beat siehe Michale jackson b&W (1991)
per_frame_153=
per_frame_154=
per_frame_155=q21 = bd_maxbpm;
per_frame_156=q32 = aspecty;monitor = maxind;
warp_1=`sampler sampler_worms;
warp_2=`float3 color, mus;
warp_3=`float dx,dy;
warp_4=`shader_body {
warp_5=`
warp_6=`uv = uv_orig;
warp_7=`float2 uv1 = float2(uv.x,uv.y+texsize.w*3);
warp_8=`ret = GetPixel(uv)*.0;
warp_9=`
warp_10=`ret.g = 0.004/abs(sin(uv.x*6.28*2*q21/200));
warp_11=`ret.b = 0.01/abs(sin(uv.x*6.28*10*q21/200));
warp_12=`
warp_13=`
warp_14=`//ret = GetPixel(uv_orig + texsize.zw*float2(1,0))-0.004;
warp_15=`
warp_16=`ret = GetPixel(uv-float2(texsize.zw*float2(-3,0)));
warp_17=`}
comp_1=`sampler sampler_rand00;
comp_2=`shader_body {
comp_3=`
comp_4=`
comp_5=`ret = GetPixel(uv);
comp_6=`
comp_7=`float2 back = tex2D(sampler_noise_lq,uv).rg-0.5;
comp_8=`
comp_9=`
comp_10=`//ret += back.g*0.1;
comp_11=`
comp_12=`//ret += GetBlur1(uv-0.01+back*0.01);
comp_13=`
comp_14=`}
comp_15=`
